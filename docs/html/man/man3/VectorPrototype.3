.TH "VectorPrototype" 3 "Wed May 20 2020" "Version 0.2.6" "qdaq" \" -*- nroff -*-
.ad l
.nh
.SH NAME
VectorPrototype \- The prototype for the Vector class\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <vectorprototype\&.h>\fP
.PP
Inherits QObject, and QScriptable\&.
.SS "Public Slots"

.in +1c
.ti -1c
.RI "bool \fBequals\fP (const \fBQDaqVector\fP &other)"
.br
.RI "Returns true if this Vector is equal to other\&. "
.ti -1c
.RI "QScriptValue \fBvalueOf\fP () const"
.br
.RI "Return the data stored by the object\&. "
.ti -1c
.RI "QScriptValue \fBtoArray\fP () const"
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "void \fBpush\fP (const QScriptValue &val)"
.br
.RI "Push a number, a Vector or a numeric Array at the end\&. "
.ti -1c
.RI "void \fBpop\fP ()"
.br
.RI "Remove the last element\&. "
.ti -1c
.RI "void \fBresize\fP (int n)"
.br
.RI "Resize to n elements keeping the first n\&. "
.ti -1c
.RI "double \fBmin\fP () const"
.br
.ti -1c
.RI "double \fBmax\fP () const"
.br
.ti -1c
.RI "double \fBmean\fP () const"
.br
.ti -1c
.RI "double \fBstd\fP () const"
.br
.ti -1c
.RI "\fBQDaqVector\fP \fBclone\fP () const"
.br
.ti -1c
.RI "QString \fBtoString\fP () const"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBVectorPrototype\fP (QObject *parent=0)"
.br
.ti -1c
.RI "\fB~VectorPrototype\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
The prototype for the Vector class\&. 

The Vector javascript class represents an array of floating point numbers\&. It is essentially a QtScript wrapper for the \fBQDaqVector\fP C++ class\&. Thus, when Qt-slots of \fBQDaq\fP classes are called from QtScript code, a \fBQDaqVector\fP passed as an argument or as return value is converted to a JS object of class Vector\&.
.PP
Elements of a Vector can be accesed by the [] operator and the 'length' property gives the number of elements\&.
.PP
New elements are added at the end of the Vector with the function \fBpush()\fP\&.
.PP
The property called 'capacity' defines for how many elements there is memory allocated\&.
.PP
The 'circular' property is a boolean value\&. If it is true then the Vector is a ring or circular buffer with maximum size equal to its capacity\&. In a circular vector, when the capacity has been reached, insertion of a new element causes deletion of the oldest element\&.
.PP
A Vector can be created in \fBQDaq\fP scripts by the new operator in 3 possible ways: 
.PP
.nf
var x1 = new Vector(10); // An empty Vector of capacity 10
var x2 = new Vector([1,2,3]); // A Vector from a numeric Array
var x3 = new Vector(x2); // x3 is a copy of x2
x2[0] // returns 1
x3\&.length // returns 3

.fi
.PP
.PP
The \fBVectorPrototype\fP class defines a number of usefull functions for handling Vector objects in script code\&. 
.PP
Definition at line 46 of file vectorprototype\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "VectorPrototype::VectorPrototype (QObject * parent = \fC0\fP)"

.PP
Definition at line 6 of file vectorprototype\&.cpp\&.
.SS "VectorPrototype::~VectorPrototype ()"

.PP
Definition at line 11 of file vectorprototype\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "void VectorPrototype::clear ()\fC [slot]\fP"

.PP
Definition at line 76 of file vectorprototype\&.cpp\&.
.SS "\fBQDaqVector\fP VectorPrototype::clone () const\fC [inline]\fP, \fC [slot]\fP"

.PP
Definition at line 78 of file vectorprototype\&.h\&.
.SS "bool VectorPrototype::equals (const \fBQDaqVector\fP & other)\fC [slot]\fP"

.PP
Returns true if this Vector is equal to other\&. 
.PP
Definition at line 22 of file vectorprototype\&.cpp\&.
.SS "double VectorPrototype::max () const\fC [slot]\fP"

.PP
Definition at line 85 of file vectorprototype\&.cpp\&.
.SS "double VectorPrototype::mean () const\fC [slot]\fP"

.PP
Definition at line 89 of file vectorprototype\&.cpp\&.
.SS "double VectorPrototype::min () const\fC [slot]\fP"

.PP
Definition at line 81 of file vectorprototype\&.cpp\&.
.SS "void VectorPrototype::pop ()\fC [slot]\fP"

.PP
Remove the last element\&. 
.PP
Definition at line 57 of file vectorprototype\&.cpp\&.
.SS "void VectorPrototype::push (const QScriptValue & val)\fC [slot]\fP"

.PP
Push a number, a Vector or a numeric Array at the end\&. 
.PP
Definition at line 32 of file vectorprototype\&.cpp\&.
.SS "void VectorPrototype::resize (int n)\fC [slot]\fP"

.PP
Resize to n elements keeping the first n\&. 
.PP
Definition at line 62 of file vectorprototype\&.cpp\&.
.SS "double VectorPrototype::std () const\fC [slot]\fP"

.PP
Definition at line 93 of file vectorprototype\&.cpp\&.
.SS "QScriptValue VectorPrototype::toArray () const\fC [slot]\fP"

.PP
Definition at line 67 of file vectorprototype\&.cpp\&.
.SS "QString VectorPrototype::toString () const\fC [slot]\fP"

.PP
Definition at line 27 of file vectorprototype\&.cpp\&.
.SS "QScriptValue VectorPrototype::valueOf () const\fC [slot]\fP"

.PP
Return the data stored by the object\&. 
.PP
Definition at line 98 of file vectorprototype\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for qdaq from the source code\&.
