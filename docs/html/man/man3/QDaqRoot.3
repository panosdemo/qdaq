.TH "QDaqRoot" 3 "Wed May 20 2020" "Version 0.2.6" "qdaq" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QDaqRoot
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <QDaqRoot\&.h>\fP
.PP
Inherits \fBQDaqObject\fP\&.
.SS "Public Slots"

.in +1c
.ti -1c
.RI "QStringList \fBclassNames\fP ()"
.br
.RI "Return the names of registered object classes\&. "
.in -1c
.SS "Signals"

.in +1c
.ti -1c
.RI "void \fBerror\fP (const \fBQDaqError\fP &e)"
.br
.ti -1c
.RI "void \fBdaqWindowsChanged\fP ()"
.br
.RI "Fired when a top level window is opened or closed\&. "
.ti -1c
.RI "void \fBobjectAttached\fP (\fBQDaqObject\fP *obj)"
.br
.RI "Fired when object is attached\&. "
.ti -1c
.RI "void \fBobjectDetached\fP (\fBQDaqObject\fP *obj)"
.br
.RI "Fired when object is detached\&. "
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQDaqRoot\fP (void)"
.br
.ti -1c
.RI "virtual \fB~QDaqRoot\fP (void)"
.br
.ti -1c
.RI "QString \fBrootDir\fP () const"
.br
.ti -1c
.RI "QString \fBlogDir\fP () const"
.br
.ti -1c
.RI "QString \fBxml\fP ()"
.br
.ti -1c
.RI "\fBQDaqObject\fP * \fBcreateObject\fP (const QString &name, const QString &className)"
.br
.ti -1c
.RI "void \fBpostError\fP (const \fBQDaqError\fP &e)"
.br
.ti -1c
.RI "void \fBaddDaqWindow\fP (QWidget *w)"
.br
.ti -1c
.RI "void \fBremoveDaqWindow\fP (QWidget *w)"
.br
.ti -1c
.RI "QWidgetList \fBdaqWindows\fP () const"
.br
.RI "Return a list of \fBQDaq\fP top level windows\&. "
.ti -1c
.RI "\fBQDaqIDE\fP * \fBideWindow\fP ()"
.br
.RI "Return a pointer to the \fBQDaq\fP IDE window\&. "
.ti -1c
.RI "\fBQDaqIDE\fP * \fBcreateIdeWindow\fP ()"
.br
.RI "Create the \fBQDaq\fP IDE window and return a pointer to it\&. "
.ti -1c
.RI "\fBQDaqSession\fP * \fBrootSession\fP ()"
.br
.RI "Returns a pointer to the root script session\&. "
.ti -1c
.RI "const \fBQDaqErrorQueue\fP * \fBerrorQueue\fP () const"
.br
.RI "Returns a pointer to the \fBQDaq\fP error queue\&. "
.ti -1c
.RI "void \fBregisterClass\fP (const QMetaObject *metaObj)"
.br
.RI "Register a QDaqObject-derived class type Registered classes can be created by \fBcreateObject()\fP\&. "
.ti -1c
.RI "QList< const QMetaObject * > \fBregisteredClasses\fP () const"
.br
.RI "Returns list of registered class metaObjects\&. "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "QString \fBrootDir_\fP"
.br
.ti -1c
.RI "QString \fBlogDir_\fP"
.br
.ti -1c
.RI "\fBQDaqLogFile\fP * \fBerrorLog_\fP"
.br
.ti -1c
.RI "\fBQDaqIDE\fP * \fBideWindow_\fP"
.br
.ti -1c
.RI "\fBQDaqSession\fP * \fBrootSession_\fP"
.br
.ti -1c
.RI "\fBQDaqErrorQueue\fP \fBerror_queue_\fP"
.br
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "QString \fBrootDir\fP"
.br
.RI "The application root directory\&. "
.ti -1c
.RI "QString \fBlogDir\fP"
.br
.RI "The directory where log files are written\&. "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
\fBQDaq\fP root object class\&.
.PP
At the top of the \fBQDaq\fP tree structure there is an object of type \fBQDaqRoot\fP\&. It is a subclass of \fBQDaqObject\fP\&.
.PP
The \fBQDaq\fP root is a single static object which can be accessed by \fBQDaqObject::root()\fP\&.
.PP
The \fBQDaq\fP root should be instantiated in the main function, after QApplication\&.
.PP
.PP
.nf
int main()
{
  QApplication app;
  QDaqRoot qdaq;

  // do something

  return app\&.exec();
}
.fi
.PP
.PP
The name of \fBQDaq\fP root is 'qdaq'\&.
.PP
A number of static items available to all \fBQDaq\fP objects are defined under \fBQDaqRoot\fP:
.IP "\(bu" 2
The error queue, available by \fBerrorQueue()\fP
.IP "\(bu" 2
a list of all application windows can be obtained by calling \fBdaqWindows()\fP
.IP "\(bu" 2
the IDE window can be obtained by \fBideWindow()\fP
.IP "\(bu" 2
the root script session, \fBrootSession()\fP 
.PP

.PP
Definition at line 59 of file QDaqRoot\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QDaqRoot::QDaqRoot (void)"

.PP
Definition at line 22 of file QDaqRoot\&.cpp\&.
.SS "QDaqRoot::~QDaqRoot (void)\fC [virtual]\fP"

.PP
Definition at line 70 of file QDaqRoot\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "void QDaqRoot::addDaqWindow (QWidget * w)"

.PP
Definition at line 144 of file QDaqRoot\&.cpp\&.
.SS "QStringList QDaqRoot::classNames ()\fC [slot]\fP"

.PP
Return the names of registered object classes\&. 
.PP
Definition at line 112 of file QDaqRoot\&.cpp\&.
.SS "\fBQDaqIDE\fP * QDaqRoot::createIdeWindow ()"

.PP
Create the \fBQDaq\fP IDE window and return a pointer to it\&. 
.PP
Definition at line 84 of file QDaqRoot\&.cpp\&.
.SS "\fBQDaqObject\fP * QDaqRoot::createObject (const QString & name, const QString & className)"
Create a \fBQDaqObject\fP with name name and class className\&.
.PP
Calls the constructor of className with name as the single argument\&.
.PP
The class with name className must be previously be registered with registerClass\&.
.PP
Typically used by \fBQDaqScriptEngine\fP to create \fBQDaq\fP objects in script code\&. 
.PP
Definition at line 98 of file QDaqRoot\&.cpp\&.
.SS "QWidgetList QDaqRoot::daqWindows () const\fC [inline]\fP"

.PP
Return a list of \fBQDaq\fP top level windows\&. 
.PP
Definition at line 107 of file QDaqRoot\&.h\&.
.SS "void QDaqRoot::daqWindowsChanged ()\fC [signal]\fP"

.PP
Fired when a top level window is opened or closed\&. 
.SS "void QDaqRoot::error (const \fBQDaqError\fP & e)\fC [signal]\fP"

.SS "const \fBQDaqErrorQueue\fP* QDaqRoot::errorQueue () const\fC [inline]\fP"

.PP
Returns a pointer to the \fBQDaq\fP error queue\&. 
.PP
Definition at line 119 of file QDaqRoot\&.h\&.
.SS "\fBQDaqIDE\fP* QDaqRoot::ideWindow ()\fC [inline]\fP"

.PP
Return a pointer to the \fBQDaq\fP IDE window\&. 
.PP
Definition at line 110 of file QDaqRoot\&.h\&.
.SS "QString QDaqRoot::logDir () const\fC [inline]\fP"

.PP
Definition at line 80 of file QDaqRoot\&.h\&.
.SS "void QDaqRoot::objectAttached (\fBQDaqObject\fP * obj)\fC [signal]\fP"

.PP
Fired when object is attached\&. 
.SS "void QDaqRoot::objectDetached (\fBQDaqObject\fP * obj)\fC [signal]\fP"

.PP
Fired when object is detached\&. 
.SS "void QDaqRoot::postError (const \fBQDaqError\fP & e)\fC [inline]\fP"
Called to post an error at the \fBQDaq\fP error queue\&.
.PP
This function is thread safe\&. 
.PP
Definition at line 101 of file QDaqRoot\&.h\&.
.SS "void QDaqRoot::registerClass (const QMetaObject * metaObj)"

.PP
Register a QDaqObject-derived class type Registered classes can be created by \fBcreateObject()\fP\&. 
.PP
\fBParameters\fP
.RS 4
\fImetaObj\fP meta-object of the class 
.RE
.PP

.PP
Definition at line 120 of file QDaqRoot\&.cpp\&.
.SS "QList< const QMetaObject * > QDaqRoot::registeredClasses () const"

.PP
Returns list of registered class metaObjects\&. 
.PP
Definition at line 125 of file QDaqRoot\&.cpp\&.
.SS "void QDaqRoot::removeDaqWindow (QWidget * w)"

.PP
Definition at line 152 of file QDaqRoot\&.cpp\&.
.SS "QString QDaqRoot::rootDir () const\fC [inline]\fP"

.PP
Definition at line 79 of file QDaqRoot\&.h\&.
.SS "\fBQDaqSession\fP* QDaqRoot::rootSession ()\fC [inline]\fP"

.PP
Returns a pointer to the root script session\&. 
.PP
Definition at line 116 of file QDaqRoot\&.h\&.
.SS "QString QDaqRoot::xml ()"

.PP
Definition at line 92 of file QDaqRoot\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBQDaqErrorQueue\fP QDaqRoot::error_queue_\fC [protected]\fP"

.PP
Definition at line 73 of file QDaqRoot\&.h\&.
.SS "\fBQDaqLogFile\fP* QDaqRoot::errorLog_\fC [protected]\fP"

.PP
Definition at line 70 of file QDaqRoot\&.h\&.
.SS "\fBQDaqIDE\fP* QDaqRoot::ideWindow_\fC [protected]\fP"

.PP
Definition at line 71 of file QDaqRoot\&.h\&.
.SS "QString QDaqRoot::logDir_\fC [protected]\fP"

.PP
Definition at line 69 of file QDaqRoot\&.h\&.
.SS "QString QDaqRoot::rootDir_\fC [protected]\fP"

.PP
Definition at line 69 of file QDaqRoot\&.h\&.
.SS "\fBQDaqSession\fP* QDaqRoot::rootSession_\fC [protected]\fP"

.PP
Definition at line 72 of file QDaqRoot\&.h\&.
.SH "Property Documentation"
.PP 
.SS "QString QDaqRoot::logDir\fC [read]\fP"

.PP
The directory where log files are written\&. 
.PP
Definition at line 24 of file QDaqRoot\&.h\&.
.SS "QString QDaqRoot::rootDir\fC [read]\fP"

.PP
The application root directory\&. 
.PP
Definition at line 24 of file QDaqRoot\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for qdaq from the source code\&.
