.TH "QDaqModbusTcp" 3 "Wed May 20 2020" "Version 0.2.6" "qdaq" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QDaqModbusTcp \- A class for accesing a MODBUS/TCP connection\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <qdaqmodbus\&.h>\fP
.PP
Inherits \fBQDaqTcpip\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "Q_INVOKABLE \fBQDaqModbusTcp\fP (const QString &name, const QString &ahost=QString(), uint portno=502)"
.br
.RI "\fBQDaqModbusTcp\fP constructor\&. "
.ti -1c
.RI "virtual \fB~QDaqModbusTcp\fP ()"
.br
.ti -1c
.RI "virtual int \fBread\fP (uint \fBport\fP, char *buff, int len, int eos=0)"
.br
.RI "Read data from a port\&. "
.ti -1c
.RI "virtual int \fBwrite\fP (uint \fBport\fP, const char *buff, int len, int eos=0)"
.br
.RI "Write data to a port\&. "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual bool \fBopen_\fP ()"
.br
.RI "Implementation of interface open\&. "
.ti -1c
.RI "virtual void \fBclose_\fP ()"
.br
.RI "Implementation of interface close\&. "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "void * \fBctx_\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
A class for accesing a MODBUS/TCP connection\&. 

Used to access MODBUS devices with the TCP/IP protocol\&. A separate \fBQDaqModbusTcp\fP object must be used per device\&.
.PP
Port number is typically 502\&.
.PP
\fBQDaqModbusTcp\fP can read/write only MODBUS registers, i\&.e\&. 16 bit words\&.
.PP
Implementation of MODBUS in \fBQDaq\fP is based on libmodbus\&. 
.PP
Definition at line 60 of file qdaqmodbus\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QDaqModbusTcp::QDaqModbusTcp (const QString & name, const QString & ahost = \fCQString()\fP, uint portno = \fC502\fP)\fC [explicit]\fP"

.PP
\fBQDaqModbusTcp\fP constructor\&. 
.PP
\fBParameters\fP
.RS 4
\fIname\fP The \fBQDaqObject\fP name 
.br
\fIahost\fP Host address as string, eg, '192\&.168\&.1\&.2' 
.br
\fIportno\fP port number, typically 502 
.RE
.PP

.PP
Definition at line 99 of file qdaqmodbus\&.cpp\&.
.SS "QDaqModbusTcp::~QDaqModbusTcp ()\fC [virtual]\fP"

.PP
Definition at line 104 of file qdaqmodbus\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "void QDaqModbusTcp::close_ ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Implementation of interface close\&. 
.PP
Reimplemented from \fBQDaqTcpip\fP\&.
.PP
Definition at line 143 of file qdaqmodbus\&.cpp\&.
.SS "bool QDaqModbusTcp::open_ ()\fC [protected]\fP, \fC [virtual]\fP"

.PP
Implementation of interface open\&. 
.PP
Reimplemented from \fBQDaqTcpip\fP\&.
.PP
Definition at line 108 of file qdaqmodbus\&.cpp\&.
.SS "int QDaqModbusTcp::read (uint port, char * buff, int len, int eos = \fC0\fP)\fC [virtual]\fP"

.PP
Read data from a port\&. The meaning of the port parameter is different depending on the type of communication interface\&.
.PP
In message based communications (e\&.g\&. GPIB) the port is the instrument address\&.
.PP
In memory based interfaces (e\&.g\&. MODBUS) the port number represents the starting register address to access\&. The number of registers read/written depends on len, the size of the buffer in bytes\&. A MODBUS register is 16 bit, ie, occupies 2 bytes\&.
.PP
\fBParameters\fP
.RS 4
\fIport\fP Port number\&. 
.br
\fIbuff\fP Pointer to memory buffer\&. 
.br
\fIlen\fP Allocated number of bytes\&. 
.br
\fIeos\fP End of string byte 
.RE
.PP
\fBReturns\fP
.RS 4
Number of bytes read\&. 
.RE
.PP

.PP
Reimplemented from \fBQDaqTcpip\fP\&.
.PP
Definition at line 157 of file qdaqmodbus\&.cpp\&.
.SS "int QDaqModbusTcp::write (uint port, const char * buff, int len, int eos = \fC0\fP)\fC [virtual]\fP"

.PP
Write data to a port\&. The meaning of the port parameter is different depending on the type of communication interface\&.
.PP
In message based communications (e\&.g\&. GPIB) the port is the instrument address\&.
.PP
In memory based interfaces (e\&.g\&. MODBUS) the port number represents the starting register address to access\&. The number of registers read/written depends on len, the size of the buffer in bytes\&. A MODBUS register is 16 bit, ie, occupies 2 bytes\&.
.PP
\fBParameters\fP
.RS 4
\fIp\fP Port number\&. 
.br
\fIbuff\fP Pointer to memory buffer\&. 
.br
\fIlen\fP Number of bytes to write\&. 
.br
\fIeos\fP End of string byte 
.RE
.PP
\fBReturns\fP
.RS 4
Number of bytes written\&. 
.RE
.PP

.PP
Reimplemented from \fBQDaqTcpip\fP\&.
.PP
Definition at line 175 of file qdaqmodbus\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "void* QDaqModbusTcp::ctx_\fC [protected]\fP"

.PP
Definition at line 65 of file qdaqmodbus\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for qdaq from the source code\&.
